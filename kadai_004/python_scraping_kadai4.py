# -*- coding: utf-8 -*-
"""python_scraping_kadai4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KivFHzP1zaO4k-2ExpDNDp8h_8fRjHJR
"""

pip install selenium

from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from bs4 import BeautifulSoup
from datetime import datetime
from pytz import timezone


# HTMLから株価データを抽出する関数
def extract_stock_data(html):
    soup = BeautifulSoup(html, "html.parser")
    table = soup.select_one("#highcharts-0 > div.highcharts-tooltip > span > table")
    trs = table.findAll("tr")
    tds = trs[0].findAll("td")

    # 日付の変換
    date_str = tds[0].text
    date = datetime.strptime(date_str, "%Y/%m/%d").strftime("%Y/%m/%d")
    # print(date)
    data_list = [date]

    # 始値、高値、安値、終値の値を取得
    for td in tds[1:6]:
        if td.text != "":
            data_list.append(td.text)

    return data_list

def get_stock_value(driver, url):
    # ドライバーの起動
    driver.get(url)

    # グラフを指定する
    graph = driver.find_element(By.CLASS_NAME, "highcharts-series-group")

    # ActionChainsオブジェクト作成
    actions = ActionChains(driver)
    # グラフに移動する
    actions.move_to_element(graph)
    # グラフの横幅の半分だけ右に移動する
    actions.move_by_offset((graph.rect["width"] // 2), 0)
    # 定義した動作の実行
    actions.perform()

    # グラフの横幅を定義する
    width = graph.rect["width"]

    # 株価データを格納するリストを定義
    stock_data = []

    for i in range(width):
    # for i in range(10):
        # 株価データを抽出する
        stock_data.append(extract_stock_data(driver.page_source))
        # print(stock_data)

        # マウスを左に移動させる
        actions = ActionChains(driver)
        actions.move_by_offset(-1, 0)
        actions.perform()

    return stock_data


# 株価データを抽出する
chrome_options = webdriver.ChromeOptions()
chrome_options.add_argument("--headless")
chrome_options.add_argument("--no-sandbox")
chrome_options.add_argument("--disable-dev-shm-usage")

chrome_driver = webdriver.Chrome(options=chrome_options)
#chrome_driver.get("https://www.nikkei.com/markets/worldidx/chart/nk225/?type=6month")

# 開始時間の取得
start_time = datetime.now()
start_time = start_time.astimezone(timezone("Asia/Tokyo"))
start_time = start_time.replace(tzinfo=None)
# print(start_time)

# 株価データの取得
stock_data = get_stock_value(chrome_driver, "https://www.nikkei.com/markets/worldidx/chart/nk225/?type=6month")

# 終了時間の取得
end_time = datetime.now()
end_time = end_time.astimezone(timezone("Asia/Tokyo"))
end_time = end_time.replace(tzinfo=None)
# print(end_time)

# 処理にかかった時間の取得
total_time = end_time - start_time
total_time_sec = total_time.total_seconds()
total_time_int = int(total_time_sec)

# print(total_time)

# 結果の出力
print(f"開始時間： {start_time.replace(microsecond=0)}")
print(f"終了時間： {end_time.replace(microsecond=0)}")
print(f"スクレイピングにかかった時間: {total_time_int}秒")

print("取得した株価データ")

for data in stock_data:
    print(data)

